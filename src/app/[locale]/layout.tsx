import type { Metadata } from "next";
import { Poppins, Raleway, Spectral } from "next/font/google";
import localFont from "next/font/local";
import "@/styles/globals.css";
import { Locale, locales } from "@/i18n";
import { unstable_setRequestLocale } from "next-intl/server";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";
import { NextIntlClientProvider, useMessages } from "next-intl";

const raleway = Raleway({
    subsets: ["latin"],
    weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

const collingar = localFont({
    src: "../../../public/fonts/Collingar-Italic/Collingar-Italic.otf",
    variable: "--font-collingar",
});
const transcend = localFont({
    src: [
        {
            path: "../../../public/fonts/Transcend/Transcend-Black.otf",
            weight: "900", // Black
            style: "normal",
        },
        {
            path: "../../../public/fonts/Transcend/Transcend-Bold.otf",
            weight: "700", // Bold
            style: "normal",
        },
        {
            path: "../../../public/fonts/Transcend/Transcend-Light.otf",
            weight: "300", // Light
            style: "normal",
        },
        {
            path: "../../../public/fonts/Transcend/Transcend-Medium.otf",
            weight: "500", // Medium
            style: "normal",
        },
        {
            path: "../../../public/fonts/Transcend/Transcend-Regular.otf",
            weight: "400", // Regular
            style: "normal",
        },
        {
            path: "../../../public/fonts/Transcend/Transcend-Semibold.otf",
            weight: "600", // Semibold
            style: "normal",
        },
        {
            path: "../../../public/fonts/Transcend/Transcend-Thin.otf",
            weight: "100", // Thin
            style: "normal",
        },
    ],
    variable: "--font-transcend",
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export function generateStaticParams() {
    return locales.map((locale) => ({ locale }));
}

export default function RootLayout({
    children,
    params: { locale },
}: Readonly<{
    children: React.ReactNode;
    params: { locale: Locale };
}>) {
    // https://next-intl-docs.vercel.app/docs/getting-started/app-router#add-unstable_setrequestlocale-to-all-layouts-and-pages
    unstable_setRequestLocale(locale);
    const translations = useMessages();

    return (
        <html lang={locale}>
            <body className={raleway.className}>
                <NextIntlClientProvider
                    locale={locale}
                    messages={translations}
                    timeZone="Asia/Dubai"
                >
                    <Navbar />
                    <main>{children}</main>
                    <Footer />
                </NextIntlClientProvider>
            </body>
        </html>
    );
}
